<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core">

    <h:head>
        <h:outputStylesheet name="styleConfirmarEdicaoModel.css" library="css" />
        <h:outputScript library="js" name="inputmask.min.js" target="head" />
    </h:head>

    <p:dialog header="Editar Pessoa"
              widgetVar="dialogEditar"
              modal="true"
              resizable="false"
              id="dialogEditar">

        <h:form id="formDialog">
            <p:panel style="width:900px;">
                <p:outputPanel id="panelMensagens" autoUpdate="true" style="color: red;" escape="false">
                    <h:outputText value="#{modalBean.errorMessage}" escape="false" />
                </p:outputPanel>

                <p:panelGrid columns="3">
                    <!-- Nome Completo -->
                    <i class="pi pi-arrow-right"></i>
                    <p:outputLabel for="nome" value="Nome Completo:" style="text-align: left; white-space: nowrap;" />
                    <p:inputText id="nome" value="#{modalBean.pessoaSelecionada.nome}" />


                    <!-- Idade -->
                    <i class="pi pi-arrow-right"></i>
                    <p:outputLabel for="idade" value="Idade:" styleClass="label" />
                    <p:inputText id="idade" value="#{modalBean.pessoaSelecionada.idade}" />


                    <!-- Data de Nascimento -->
                    <i class="pi pi-arrow-right"></i>
                    <p:outputLabel for="data" value="Data de Nascimento:" styleClass="label" />
                    <p:calendar id="data"
                                value="#{modalBean.pessoaSelecionada.dataNascimento}"
                                pattern="dd/MM/yyyy"
                                maxdate="#{now}"
                                navigator="false"
                                yearRange="c-100:c+100"
                                readonly="false"
                                readonlyInput="false">
                        <p:ajax event="dateSelect"
                                update="data"
                                global="false"/>
                        <p:ajax global="false"
                                update="data"
                                event="change"/>
                    </p:calendar>

                </p:panelGrid>

                <p:separator />

                <h:panelGroup layout="block" styleClass="flex-form-row">
                    <p:outputLabel for="tipo" value="Tipo de Documento:" styleClass="form-label" />
                    <p:selectOneMenu id="tipo" value="#{modalBean.pessoaSelecionada.tipoDocumento}" styleClass="form-input" required="false">
                        <f:selectItem itemLabel="Selecione" itemValue="#{null}" noSelectionOption="true" />
                        <f:selectItem itemLabel="CPF" itemValue="CPF" />
                        <f:selectItem itemLabel="CNPJ" itemValue="CNPJ" />
                        <p:ajax update="documento-fields" process="@this"
                                oncomplete="setTimeout(function() {
                                if (document.getElementById('formDialog:cpf')) {
                                    aplicarInputInvertido('formDialog:cpf', 'CPF');
                                }
                                if (document.getElementById('formDialog:cnpj')) {
                                    aplicarInputInvertido('formDialog:cnpj', 'CNPJ');
                                }
                            }, 100);" />
                    </p:selectOneMenu>
                </h:panelGroup>

                <h:panelGroup id="documento-fields" layout="block">
                    <h:panelGroup rendered="#{modalBean.pessoaSelecionada.tipoDocumento eq 'CPF'}" layout="block" styleClass="flex-form-row">
                        <p:outputLabel for="cpf" value="CPF:" styleClass="form-label" />
                        <p:inputText id="cpf" value="#{modalBean.pessoaSelecionada.numeroCPF}"
                                     placeholder="000.000.000-00"
                                     onfocus="aplicarInputInvertido(this.id, 'CPF')"/>


                    </h:panelGroup>

                    <h:panelGroup rendered="#{modalBean.pessoaSelecionada.tipoDocumento eq 'CNPJ'}" layout="block" styleClass="flex-form-row">
                        <p:outputLabel for="cnpj" value="CNPJ:" styleClass="form-label" />
                        <p:inputText id="cnpj" value="#{modalBean.pessoaSelecionada.numeroCNPJ}"
                                     placeholder="00.000.000/0000-00"
                                     onfocus="aplicarInputInvertido(this.id, 'CNPJ')"/>


                    </h:panelGroup>
                </h:panelGroup>

                <p:separator />

                <p:commandButton value="Salvar"
                                 action="#{modalBean.validarCampos}"
                                 process="@form"
                                 update="formDialog:panelMensagens"
                                 icon="pi pi-check" />

                <p:commandButton value="Cancelar"
                                 type="button"
                                 onclick="PF('dialogEditar').hide()"
                                 icon="pi pi-times"
                                 styleClass="ui-button-secondary" />
            </p:panel>
        </h:form>
        <!-- Script para regra de preenchimento dos campos CPF E CNPJ da direita para esquerda-->
        <h:outputScript target="form">
            function aplicarInputInvertido(idCampo, tipo) {
                const input = document.getElementById(idCampo);
                if (!input || typeof Inputmask === "undefined") return;

                const mascara = tipo === 'CPF' ? '999.999.999-99' : '99.999.999/9999-99';

                Inputmask({
                    mask: mascara,
                    numericInput: true,
                    rightAlign: false,
                    placeholder: '0',
                    showMaskOnHover: false,
                    showMaskOnFocus: true,
                    clearIncomplete: true
                }).mask(input);

                // Se já houver valor no input, força máscara para exibir formatado
                if (input.value) {
                    input.inputmask.setValue(input.value);
                }
            }
        </h:outputScript>
    </p:dialog>
</ui:composition>