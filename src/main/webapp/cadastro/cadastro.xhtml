<html lang="pt-br"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
<h:head>
    <meta charset="UTF-8"/>
    <title>
        <ui:insert name="title">Página de Cadastro</ui:insert>
    </title>
    <h:outputStylesheet name="primeicons/primeicons.css" library="primefaces" />
    <h:outputStylesheet name="styleConfirmarEdicaoModel.css" library="css" />

    <h:outputScript library="js" name="inputmask.min.js" target="head" />
</h:head>
<h:body>

    <h:form id="menuForm">
        <!-- Menu -->
        <p:menubar>
            <p:menuitem value=" Home" url="#{request.contextPath}/index.xhtml" icon="pi pi-home"/>
            <p:menuitem value="Cadastro" url="#{request.contextPath}/cadastro/cadastro.xhtml" />
            <p:menuitem value="Consulta" url="#{request.contextPath}/cadastro/consultaPessoas.xhtml" />
        </p:menubar>
    </h:form>

    <h:form id="formCadastro">
        <!-- Inclui o modal (confirmarModel.xhtml) para reutilização -->
        <ui:include src="/model/confirmarModel.xhtml" >
            <ui:param name="modalBean" value="#{cadastroBean}"/>
        </ui:include>

        <p:panel header="Formulário de Cadastro" style="width:900px;">
            <!-- Mensagens gerais de erro -->
            <p:messages showDetail="true" closable="true" />


            <p:panelGrid id="panelgrid">

                <!-- Nome Completo -->
                <p:row>
                    <p:column styleClass="column-arrow" >  <!--define width of a column-->
                        <i class="pi pi-arrow-right"></i>
                    </p:column>
                    <p:column styleClass="column-label" > <!--column 2-->
                        <p:outputLabel for="nome" value="Nome Completo:" style="text-align: left; white-space: nowrap;" />
                    </p:column>
                    <p:column styleClass="column-value" > <!--column 3-->
                        <p:inputText id="nome" value="#{cadastroBean.cadastrarPessoa.nome}" />
                    </p:column>
                </p:row>


                <!-- Idade -->
                <p:row>
                    <p:column styleClass="column-arrow">  <!--define width of a column-->
                        <i class="pi pi-arrow-right"></i>
                    </p:column>
                    <p:column styleClass="column-label"> <!--column 2-->
                        <p:outputLabel for="idade" value="Idade:" styleClass="label" />
                    </p:column>
                    <p:column styleClass="column-value"> <!--column 3-->
                        <p:inputText id="idade" value="#{cadastroBean.cadastrarPessoa.idade}" />
                    </p:column>
                </p:row>



                <!-- Data de Nascimento -->
                <p:row>
                    <p:column styleClass="column-arrow">  <!--define width of a column-->
                        <i class="pi pi-arrow-right"></i>
                    </p:column>
                    <p:column styleClass="column-label"> <!--column 2-->
                        <p:outputLabel for="data" value="Data de Nascimento:" styleClass="label" />
                    </p:column>
                    <p:column styleClass="column-value"> <!--column 3-->
                        <p:calendar id="data" value="#{cadastroBean.cadastrarPessoa.dataNascimento}" pattern="dd/MM/yyyy" showIcon="true" />
                    </p:column>
                </p:row>


            </p:panelGrid>

            <p:separator />

            <h:panelGroup layout="block" styleClass="flex-form-row">
                <p:outputLabel for="tipo" value="Tipo de Documento:" styleClass="form-label" />
                <p:selectOneMenu id="tipo" value="#{cadastroBean.cadastrarPessoa.tipoDocumento}" styleClass="form-input">
                    <f:selectItem itemLabel="Selecione" itemValue="" noSelectionOption="true" />
                    <f:selectItem itemLabel="CPF" itemValue="CPF" />
                    <f:selectItem itemLabel="CNPJ" itemValue="CNPJ" />
                    <p:ajax update="documento-fields" process="@this"
                            oncomplete="setTimeout(function() {
                                if (document.getElementById('formCadastro:cpf')) {
                                    aplicarInputInvertido('formCadastro:cpf', 'CPF');
                                }
                                if (document.getElementById('formCadastro:cnpj')) {
                                    aplicarInputInvertido('formCadastro:cnpj', 'CNPJ');
                                }
                            }, 100);" />
                </p:selectOneMenu>
            </h:panelGroup>

            <h:panelGroup id="documento-fields" layout="block">
                <h:panelGroup rendered="#{cadastroBean.cadastrarPessoa.tipoDocumento eq 'CPF'}" layout="block" styleClass="flex-form-row">
                    <p:outputLabel for="cpf" value="CPF:" styleClass="form-label" />
                    <p:inputText id="cpf" value="#{cadastroBean.cadastrarPessoa.numeroCPF}"
                                 placeholder="000.000.000-00"
                                 onfocus="aplicarInputInvertido(this.id, 'CPF')"
                                 autoClear="true" unmask="true"/>
                </h:panelGroup>

                <h:panelGroup rendered="#{cadastroBean.cadastrarPessoa.tipoDocumento eq 'CNPJ'}" layout="block" styleClass="flex-form-row">
                    <p:outputLabel for="cnpj" value="CNPJ:" styleClass="form-label" />
                    <p:inputText id="cnpj" value="#{cadastroBean.cadastrarPessoa.numeroCNPJ}"
                                 placeholder="00.000.000/0000-00"
                                 onfocus="aplicarInputInvertido(this.id, 'CNPJ')"
                                 autoClear="true" unmask="true"/>
                </h:panelGroup>
            </h:panelGroup>

            <p:separator/>

            <p:commandButton value="Limpar"
                             action="#{cadastroBean.limpar}"
                             update="@form"
                             icon="pi pi-refresh"
                             styleClass="ui-button-secondary" />

            <!-- Botão Salvar chama o método de validação na bean.
                 Se a validação for bem-sucedida, o método validarCampos() invoca o modal de confirmação. -->
            <p:commandButton value="Salvar"
                             action="#{cadastroBean.validarCampos}"
                             update="@form"
                             process="@form"
                             icon="pi pi-save"
                             ajax="true" />

        </p:panel>

        <!-- Diálogo para exibir a lista de campos não preenchidos -->
        <p:dialog widgetVar="errorDialog" header="Campos não preenchidos"
                  modal="true" closable="false" resizable="false">
            <h:outputText value="#{cadastroBean.errorMessage}" escape="false" />
            <f:facet name="footer">
                <p:commandButton value="Fechar"
                                 onclick="PF('errorDialog').hide();"
                                 type="button" />
            </f:facet>
        </p:dialog>
        <!-- Diaglogo de sucesso-->
        <p:dialog widgetVar="successDialog" header="Sucesso"
                  modal="true" closable="false" resizable="false">
            <h:outputText value="Cadastro realizado com sucesso!" />
            <f:facet name="footer">
                <p:commandButton value="Ok"
                                 onclick="PF('successDialog').hide();"
                                 type="button" />
            </f:facet>
        </p:dialog>
    </h:form>

    <!-- Script para regra de preenchimento dos campos CPF E CNPJ da direita para esquerda-->
    <h:outputScript target="body">
        document.addEventListener("DOMContentLoaded", function () {
        window.aplicarInputInvertido = function(idCampo, tipo) {
        const mascara = tipo === 'CPF' ? '999.999.999-99' : '99.999.999/9999-99';
        const input = document.getElementById(idCampo);
        if (!input || typeof Inputmask === "undefined") {
        console.warn("Inputmask não disponível.");
        return;
        }

        Inputmask({
        mask: mascara,
        numericInput: true,
        rightAlign: false,
        placeholder: '0',
        showMaskOnHover: true,
        showMaskOnFocus: true,
        clearIncomplete: true
        }).mask(input);
        };
        });
    </h:outputScript>
</h:body>
</html>